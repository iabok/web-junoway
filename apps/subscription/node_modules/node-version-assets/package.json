{
  "name": "node-version-assets",
  "version": "0.2.0",
  "description": "version your static assets",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "test": "tap ./test",
    "pretest": "node ./test-utils/pre-post-test",
    "posttest": "node ./test-utils/pre-post-test"
  },
  "author": {
    "name": "Andrew Griffiths",
    "email": "mail@andrewgriffithsonline.com"
  },
  "maintainers": [
    {
      "name": "techjacker",
      "email": "mail@andrewgriffithsonline.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/techjacker/node-version-assets"
  },
  "github": "https://github.com/techjacker/node-version-assets",
  "engines": [
    "node >= 0.8.0"
  ],
  "bugs": {
    "url": "https://github.com/techjacker/node-version-assets/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/techjacker/node-version-assets/blob/master/LICENSE"
    }
  ],
  "tags": [
    "static",
    "performance",
    "assets",
    "version",
    "versioning"
  ],
  "keywords": [
    "static",
    "performance",
    "assets",
    "version",
    "versioning"
  ],
  "devDependencies": {
    "tap": "https://github.com/isaacs/node-tap/archive/master.tar.gz",
    "curry": "0.0.4",
    "async": "~0.2.5"
  },
  "dependencies": {
    "underscore": "~1.4.4",
    "async": "~0.2.1",
    "crypto": "0.0.3"
  },
  "readme": "# node-version-assets\n\n[![Build Status](https://secure.travis-ci.org/techjacker/node-version-assets.png)](http://travis-ci.org/techjacker/node-version-assets)\n\n- Versions your static assets using the power of streams!\n- Version number produced from md5hash of each file -> so unchanged assets will keep the same file name and not blow the browser cache.\n- Greps your html and css files and updates filenames of versioned files.\n- Add to your build scripts/favourite build tool.\n- See below for grunt integration example.\n\n\n## Install\n```Shell\nnpm install -g node-version-assets\n```\n\n## What it does:\n1. Renames assets on filesystem\n```Shell\n\t## BEFORE\n\t/www/project-x/public/css$ ls -l\n\t> all-min.css\n\n\t## AFTER\n\t/www/project-x/public/css$ ls -l\n\t> all-min.44d0440440442524c6d667900275e.css\n```\n\n2.  Find and replaces references to them in files:\n```HTML\n\t<!-- index.html: BEFORE -->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/all-min.css\">\n\n\t<!-- index.html: AFTER -->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/all-min.44d0440440442524c6d667900275e.css\">\n```\n\n## How this module fits into your build process:\n1. you:\t\tgenerate fresh asset and output to the location specified in options.assets (> /public/css/all.min.css)\n2. module: \trenames fresh asset file to versioned name (> all.min.__newversion__.css)\n3. module: \tdeletes original fresh asset file (all.min.css > deleted)\n4. module: \tdeletes old versioned asset files in the same dir (all.min.__oldversion__.css > deleted)\n\n\n## Example\n\n#### Input options in script:\n```JavaScript\n/* ~/www/project-x/version.js */\nvar Version = require(\"node-version-assets\");\nvar versionInstance = new Version({\n\tassets: ['public/css/all-min.css', 'public/js/app.js'],\n\tgrepFiles: ['views/prod/index.html']\n});\nversionInstance.run();\n```\n\n#### Run the script:\n\n```Shell\nandy@bada55:~/www/project-x$ node version.js\n\nDeleted Assets:\n   public/css/all-min.css\n   public/js/app.js\n\nVersioned Assets Created:\n   public/css/all-min.44d0440440442524c6d667900275e.css: file unchanged > version number re-used\n   public/js/app.12d070550742574e8d87900er34.js: file unchanged > version number re-used\n\nFiles whose contents were updated with refs to renamed asset files:\n   views/prod/index.html\n```\n\n## Grunt Example\n```JavaScript\ngrunt.registerTask('version-assets', 'version the static assets just created', function() {\n\n\tvar Version = require(\"node-version-assets\");\n\tvar versionInstance = new Version({\n\t\tassets: ['public/css/all-min.css', 'public/js/app.js'],\n\t\tgrepFiles: ['views/prod/index.html']\n\t});\n\n\tvar cb = this.async(); // grunt async callback\n\tversionInstance.run(cb);\n});\n\n// make sure versioning is final task\ngrunt.registerTask('default', 'lint rjs jpgmin gifmin pngmin concat cssmin version-assets');\n```\n\n## Options\n\n#### @param {options}\n- accepts: object\n\n#### @param {options.assets}\n- accepts: array of strings\n- required: each item of the array is the relative file path to the static asset\n- each static asset listed will have the new version number inserted before the file type prefix, eg:\n\t- all-min.js > all.min.01135498.js\n- if there is a previous version number in the same position then it will be replaced, eg:\n\t- all-min.oldversion234.js > all.min.01135498.js\n\n\n## Optional, ahem, Options\n\n#### @param {options.grepFiles}\n- accepts: array of strings\n- list of files (relative filepaths) containing references to the {options.assets} which need to be renamed\n\n\n#### @param {options.newVersion}\n- accepts: string (only numbers or letters)\n- not required: defaults to generating an md5 hash of the file (recommended to leave as default as md5 hashing means that assets will not blow browser cache if they're unchanged)\n\n\n#### @param {options.keepOriginalAndOldVersions}\n- accepts: boolean\n- set this to true if you want to disable auto-deletion of BOTH the original and old versions\n- by default the module deletes:\n\t1. the original, unversioned asset (eg app.js)\n\t2. previous versions of the asset (eg app.435fdg435TG435435.js)\n\n#### @param {options.keepOriginal}\n- accepts: boolean\n- set this to true if you want to delete just the ORIGINAL\n- if options.keepOriginalAndOldVersions is true then the old versions will still be deleted\n\n#### @param {options.keepOldVersions}\n- accepts: boolean\n- set this to true if you want to delete just the OLD VERSIONS\n- if options.keepOriginalAndOldVersions is true then the original will still be deleted\n\n\n#### @param {options.requireJs}\n- accepts: boolean\n- not required: defaults to false\n\nIf set to true then unsuffixed js assets (listed in the assets array) will be updated to the new version, eg:\n```HTML\n<script type=\"text/javascript\">\n\trequire.config({\n\t\tpaths: {\n\n\t\t\t<!-- BEFORE: -->\n\t\t\tmain: \"js/app.newie\"\n\n\t\t\t<!-- AFTER: -->\n\t\t\tmain: \"js/app.newie.001\"\n\t\t}\n\t});\n</script>\n```\n\n\n## Potential Gotchas\n- Assets that you want versioned must be listed in the assets array\n- Check all asset paths are correct: they must be relative to the dir where you are executing the command.\n- The new assets must exist in an unversioned form on the filesystem to be renamed and be listed in the {options.assets} array\n- If you specify a version number it can only contain letters or numbers (ie no special characters)\n\n\n## Version Log\n- 0.0.2: added {options.keepOriginalAndOldVersions}\n- 0.0.3: enabled versioning of all file types (previously just utf8)\n- 0.0.4 - 0.0.8: misc bug fixes",
  "_id": "node-version-assets@0.2.0",
  "dist": {
    "shasum": "b3475ce0b2ad5ae8e6c1bca639c1acc1c0e162f5",
    "tarball": "http://registry.npmjs.org/node-version-assets/-/node-version-assets-0.2.0.tgz"
  },
  "_npmVersion": "1.1.61",
  "_npmUser": {
    "name": "techjacker",
    "email": "mail@andrewgriffithsonline.com"
  },
  "directories": {},
  "_shasum": "b3475ce0b2ad5ae8e6c1bca639c1acc1c0e162f5",
  "_from": "node-version-assets@~0.2.0",
  "_resolved": "http://registry.npmjs.org/node-version-assets/-/node-version-assets-0.2.0.tgz"
}
